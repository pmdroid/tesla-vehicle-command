/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.8 */

#ifndef PB_ERRORS_ERRORS_PB_H_INCLUDED
#define PB_ERRORS_ERRORS_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Enum definitions */
typedef enum _Errors_GenericError_E {
    Errors_GenericError_E_GENERICERROR_NONE = 0,
    Errors_GenericError_E_GENERICERROR_UNKNOWN = 1,
    Errors_GenericError_E_GENERICERROR_CLOSURES_OPEN = 2,
    Errors_GenericError_E_GENERICERROR_ALREADY_ON = 3,
    Errors_GenericError_E_GENERICERROR_DISABLED_FOR_USER_COMMAND = 4,
    Errors_GenericError_E_GENERICERROR_VEHICLE_NOT_IN_PARK = 5,
    Errors_GenericError_E_GENERICERROR_UNAUTHORIZED = 6,
    Errors_GenericError_E_GENERICERROR_NOT_ALLOWED_OVER_TRANSPORT = 7
} Errors_GenericError_E;

/* Struct definitions */
typedef struct _Errors_NominalError {
    Errors_GenericError_E genericError;
} Errors_NominalError;


#ifdef __cplusplus
extern "C" {
#endif

/* Helper constants for enums */
#define _Errors_GenericError_E_MIN Errors_GenericError_E_GENERICERROR_NONE
#define _Errors_GenericError_E_MAX Errors_GenericError_E_GENERICERROR_NOT_ALLOWED_OVER_TRANSPORT
#define _Errors_GenericError_E_ARRAYSIZE ((Errors_GenericError_E)(Errors_GenericError_E_GENERICERROR_NOT_ALLOWED_OVER_TRANSPORT+1))

#define Errors_NominalError_genericError_ENUMTYPE Errors_GenericError_E


/* Initializer values for message structs */
#define Errors_NominalError_init_default         {_Errors_GenericError_E_MIN}
#define Errors_NominalError_init_zero            {_Errors_GenericError_E_MIN}

/* Field tags (for use in manual encoding/decoding) */
#define Errors_NominalError_genericError_tag     1

/* Struct field encoding specification for nanopb */
#define Errors_NominalError_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UENUM,    genericError,      1)
#define Errors_NominalError_CALLBACK NULL
#define Errors_NominalError_DEFAULT NULL

extern const pb_msgdesc_t Errors_NominalError_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define Errors_NominalError_fields &Errors_NominalError_msg

/* Maximum encoded size of messages (where known) */
#define ERRORS_ERRORS_PB_H_MAX_SIZE              Errors_NominalError_size
#define Errors_NominalError_size                 2

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
